name: Weekly ADF Audit (informative)

on:
  schedule:
    # Mondays 09:00 Europe/Dublin
    - cron: '0 8 * * 1'
  workflow_dispatch:
    inputs:
      audit_date:
        description: 'Override date (YYYY-MM-DD)'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  audit:
    runs-on: ubuntu-latest
    env:
      REPO_URL: https://github.com/${{ github.repository }}
      DEFAULT_BRANCH: ${{ github.event.repository.default_branch || 'main' }}
      METHOD_VERSION: v0.5.0
      MODEL: openai/gpt-5
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Compute audit date (fallback to today UTC)
        id: date
        run: |
          echo "date=$(date -u +%F)" >> "$GITHUB_OUTPUT"

      - name: Resolve audit date env
        env:
          AUDIT_DATE_INPUT: ${{ github.event_name == 'workflow_dispatch' && inputs.audit_date || '' }}
          FALLBACK_DATE: ${{ steps.date.outputs.date }}
        run: |
          if [ -n "$AUDIT_DATE_INPUT" ]; then
            echo "AUDIT_DATE=$AUDIT_DATE_INPUT" >> "$GITHUB_ENV"
          else
            echo "AUDIT_DATE=$FALLBACK_DATE" >> "$GITHUB_ENV"
          fi

      - name: Render prompt payload
        run: |
          mkdir -p tmp
          cat .github/prompts/adf-weekly-audit.prompt.yaml > tmp/prompt.yaml
          {
            echo "repo_url: $REPO_URL"
            echo "default_branch: $DEFAULT_BRANCH"
            echo "audit_date: $AUDIT_DATE"
            echo "method_version: $METHOD_VERSION"
          } > tmp/inputs.yaml

      - name: Ensure weekly audit label exists
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh label create "automation:weekly-audit" \
            --color BFD4F2 \
            --description "Auto-generated weekly audit reports" \
            >/dev/null 2>&1 || true

      - name: Close stale weekly audit PRs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          mapfile -t stale_prs < <(gh pr list --state open --label "automation:weekly-audit" --json number,updatedAt --jq \
            '.[] | select((now - (.updatedAt | fromdateiso8601)) > 604800) | .number')
          if [ ${#stale_prs[@]} -eq 0 ]; then
            echo "No stale weekly audit PRs to close."
          else
            for pr in "${stale_prs[@]}"; do
              gh pr close "$pr" --comment "Closing stale weekly audit automation PR after 7 days without activity."
            done
          fi

      - name: Call GitHub Model (generate audit)
        id: call
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          python -m pip install --quiet --disable-pip-version-check pyyaml
          python .github/scripts/weekly_audit.py render-payload \
            --prompt tmp/prompt.yaml \
            --inputs tmp/inputs.yaml \
            --output tmp/payload.json \
            --default-model "${MODEL:-openai/gpt-5}"
          # Example REST request using the default model:
          #   curl -X POST "https://models.github.ai/inference/chat/completions" \
          #     -H "Content-Type: application/json" \
          #     -H "Authorization: Bearer $GITHUB_TOKEN" \
          #     -d '{
          #       "messages": [
          #         {"role": "system", "content": "<contents of tmp/prompt.yaml>"},
          #         {"role": "user", "content": "<contents of tmp/inputs.yaml>"}
          #       ],
          #       "model": "openai/gpt-5"
          #     }'
          #
          # Example GitHub CLI invocation:
          #   gh models run openai/gpt-5 \
          #     --system-prompt "$(cat tmp/prompt.yaml)" \
          #     "$(cat tmp/inputs.yaml)"
          #
          curl --fail-with-body -sS -X POST "https://models.github.ai/inference/chat/completions" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -d @tmp/payload.json > tmp/response.json

          python .github/scripts/weekly_audit.py extract-audit \
            --response tmp/response.json \
            --output tmp/audit.md

      - name: Write dated audit file
        run: |
          mkdir -p docs/audits
          mv tmp/audit.md docs/audits/${AUDIT_DATE}-adf-audit.md

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "docs(audit): add weekly ADF audit for ${AUDIT_DATE}"
          title: "docs(audit): ${AUDIT_DATE} â€” Weekly ADF Audit"
          body: |
            This PR adds the weekly **informative** ADF audit generated via `.github/prompts/adf-weekly-audit.prompt.yaml`.

            - Repo: ${{ env.REPO_URL }}
            - Branch: ${{ env.DEFAULT_BRANCH }}
            - Date: ${AUDIT_DATE}

            The report content was generated automatically using the GitHub Models API.
          branch: chore/weekly-adf-audit-${{ steps.date.outputs.date }}
          delete-branch: true
          labels: automation:weekly-audit
